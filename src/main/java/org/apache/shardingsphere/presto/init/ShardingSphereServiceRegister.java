package org.apache.shardingsphere.presto.init;

import org.apache.shardingsphere.authority.spi.AuthorityProviderAlgorithm;
import org.apache.shardingsphere.data.pipeline.api.MigrationJobPublicAPI;
import org.apache.shardingsphere.data.pipeline.core.api.PipelineJobAPI;
import org.apache.shardingsphere.data.pipeline.core.datasource.creator.PipelineDataSourceCreator;
import org.apache.shardingsphere.data.pipeline.core.ingest.dumper.IncrementalDumperCreator;
import org.apache.shardingsphere.data.pipeline.core.ingest.dumper.InventoryDumperCreator;
import org.apache.shardingsphere.data.pipeline.core.prepare.datasource.DataSourcePreparer;
import org.apache.shardingsphere.data.pipeline.scenario.migration.MigrationJobAPI;
import org.apache.shardingsphere.data.pipeline.spi.check.consistency.DataConsistencyCalculateAlgorithm;
import org.apache.shardingsphere.data.pipeline.spi.check.datasource.DataSourceChecker;
import org.apache.shardingsphere.data.pipeline.spi.datasource.JdbcQueryPropertiesExtension;
import org.apache.shardingsphere.data.pipeline.spi.ddlgenerator.CreateTableSQLGenerator;
import org.apache.shardingsphere.data.pipeline.spi.importer.ImporterCreator;
import org.apache.shardingsphere.data.pipeline.spi.ingest.channel.PipelineChannelCreator;
import org.apache.shardingsphere.data.pipeline.spi.ingest.dumper.ColumnValueReader;
import org.apache.shardingsphere.data.pipeline.spi.ingest.position.PositionInitializer;
import org.apache.shardingsphere.data.pipeline.spi.ratelimit.JobRateLimitAlgorithm;
import org.apache.shardingsphere.data.pipeline.spi.sqlbuilder.PipelineSQLBuilder;
import org.apache.shardingsphere.dbdiscovery.spi.DatabaseDiscoveryProviderAlgorithm;
import org.apache.shardingsphere.dialect.mapper.SQLDialectExceptionMapper;
import org.apache.shardingsphere.distsql.parser.engine.spi.FeaturedDistSQLStatementParserFacade;
import org.apache.shardingsphere.driver.state.DriverState;
import org.apache.shardingsphere.encrypt.spi.EncryptAlgorithm;
import org.apache.shardingsphere.infra.binder.decider.SQLFederationDecider;
import org.apache.shardingsphere.infra.config.rule.checker.RuleConfigurationChecker;
import org.apache.shardingsphere.infra.context.refresher.MetaDataRefresher;
import org.apache.shardingsphere.infra.database.type.DatabaseType;
import org.apache.shardingsphere.infra.datanode.DataNodeBuilder;
import org.apache.shardingsphere.infra.datasource.pool.destroyer.detector.DataSourcePoolActiveDetector;
import org.apache.shardingsphere.infra.datasource.pool.metadata.DataSourcePoolMetaData;
import org.apache.shardingsphere.infra.datetime.DatetimeService;
import org.apache.shardingsphere.infra.distsql.update.RALUpdater;
import org.apache.shardingsphere.infra.distsql.update.RuleDefinitionUpdater;
import org.apache.shardingsphere.infra.executor.check.SQLChecker;
import org.apache.shardingsphere.infra.executor.sql.execute.engine.driver.jdbc.sane.SaneQueryResultEngine;
import org.apache.shardingsphere.infra.executor.sql.execute.engine.raw.callback.RawExecutorCallback;
import org.apache.shardingsphere.infra.executor.sql.execute.result.query.impl.driver.jdbc.type.memory.loader.JDBCRowsLoader;
import org.apache.shardingsphere.infra.executor.sql.hook.SQLExecutionHook;
import org.apache.shardingsphere.infra.executor.sql.prepare.ExecutionPrepareDecorator;
import org.apache.shardingsphere.infra.executor.sql.prepare.driver.SQLExecutionUnitBuilder;
import org.apache.shardingsphere.infra.executor.sql.process.spi.ExecuteProcessReporter;
import org.apache.shardingsphere.infra.federation.optimizer.context.parser.dialect.OptimizerSQLDialectBuilder;
import org.apache.shardingsphere.infra.instance.metadata.InstanceMetaDataBuilder;
import org.apache.shardingsphere.infra.merge.engine.ResultProcessEngine;
import org.apache.shardingsphere.infra.metadata.database.schema.decorator.spi.RuleBasedSchemaMetaDataDecorator;
import org.apache.shardingsphere.infra.metadata.database.schema.loader.spi.DataTypeLoader;
import org.apache.shardingsphere.infra.metadata.database.schema.loader.spi.DialectSchemaMetaDataLoader;
import org.apache.shardingsphere.infra.rewrite.context.SQLRewriteContextDecorator;
import org.apache.shardingsphere.infra.route.SQLRouter;
import org.apache.shardingsphere.infra.rule.builder.database.DatabaseRuleBuilder;
import org.apache.shardingsphere.infra.rule.builder.database.DefaultDatabaseRuleConfigurationBuilder;
import org.apache.shardingsphere.infra.rule.builder.global.DefaultGlobalRuleConfigurationBuilder;
import org.apache.shardingsphere.infra.rule.builder.global.GlobalRuleBuilder;
import org.apache.shardingsphere.infra.util.spi.ShardingSphereServiceLoader;
import org.apache.shardingsphere.infra.util.yaml.constructor.ShardingSphereYamlConstruct;
import org.apache.shardingsphere.infra.util.yaml.representer.processor.ShardingSphereYamlTupleProcessor;
import org.apache.shardingsphere.infra.util.yaml.shortcuts.ShardingSphereYamlShortcuts;
import org.apache.shardingsphere.infra.yaml.config.swapper.mode.YamlPersistRepositoryConfigurationSwapper;
import org.apache.shardingsphere.infra.yaml.config.swapper.rule.YamlRuleConfigurationSwapper;
import org.apache.shardingsphere.mode.manager.ContextManagerBuilder;
import org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.GovernanceWatcher;
import org.apache.shardingsphere.mode.manager.listener.ContextManagerLifecycleListener;
import org.apache.shardingsphere.mode.repository.cluster.ClusterPersistRepository;
import org.apache.shardingsphere.mode.repository.standalone.StandalonePersistRepository;
import org.apache.shardingsphere.mode.repository.standalone.jdbc.provider.JDBCRepositoryProvider;
import org.apache.shardingsphere.readwritesplitting.spi.ReadQueryLoadBalanceAlgorithm;
import org.apache.shardingsphere.shadow.spi.ShadowAlgorithm;
import org.apache.shardingsphere.sharding.spi.KeyGenerateAlgorithm;
import org.apache.shardingsphere.sharding.spi.ShardingAlgorithm;
import org.apache.shardingsphere.sharding.spi.ShardingAuditAlgorithm;
import org.apache.shardingsphere.sql.parser.spi.DatabaseTypedSQLParserFacade;
import org.apache.shardingsphere.sql.parser.spi.SQLVisitorFacade;
import org.apache.shardingsphere.sqltranslator.spi.SQLTranslator;
import org.apache.shardingsphere.traffic.spi.TrafficAlgorithm;
import org.apache.shardingsphere.traffic.spi.TrafficLoadBalanceAlgorithm;
import org.apache.shardingsphere.transaction.spi.ShardingSphereTransactionManager;

/**
 * 加载ShardingSphere的各个SPI服务
 *
 * @author Eric
 * @since <pre>2022/9/26</pre>
 */
public class ShardingSphereServiceRegister {


    public void register() {
        ShardingSphereServiceLoader.register(AuthorityProviderAlgorithm.class);
        ShardingSphereServiceLoader.register(GovernanceWatcher.class);
        ShardingSphereServiceLoader.register(ClusterPersistRepository.class);
        ShardingSphereServiceLoader.register(MigrationJobPublicAPI.class);
        ShardingSphereServiceLoader.register(JdbcQueryPropertiesExtension.class);
        ShardingSphereServiceLoader.register(CreateTableSQLGenerator.class);
        ShardingSphereServiceLoader.register(ImporterCreator.class);
        ShardingSphereServiceLoader.register(PipelineChannelCreator.class);
        ShardingSphereServiceLoader.register(JobRateLimitAlgorithm.class);
        ShardingSphereServiceLoader.register(PipelineJobAPI.class);
        ShardingSphereServiceLoader.register(DataConsistencyCalculateAlgorithm.class);
        ShardingSphereServiceLoader.register(DataSourceChecker.class);
        ShardingSphereServiceLoader.register(PipelineDataSourceCreator.class);
        ShardingSphereServiceLoader.register(ColumnValueReader.class);
        ShardingSphereServiceLoader.register(IncrementalDumperCreator.class);
        ShardingSphereServiceLoader.register(InventoryDumperCreator.class);
        ShardingSphereServiceLoader.register(PositionInitializer.class);
        ShardingSphereServiceLoader.register(DataSourcePreparer.class);
        ShardingSphereServiceLoader.register(PipelineSQLBuilder.class);
        ShardingSphereServiceLoader.register(MigrationJobAPI.class);
//        ShardingSphereServiceLoader.register(MySQLDataTypeHandler.class);
//        ShardingSphereServiceLoader.register(DatetimeLoadingSQLProvider.class);
        ShardingSphereServiceLoader.register(DatabaseDiscoveryProviderAlgorithm.class);
        ShardingSphereServiceLoader.register(SQLDialectExceptionMapper.class);
        ShardingSphereServiceLoader.register(FeaturedDistSQLStatementParserFacade.class);
        ShardingSphereServiceLoader.register(EncryptAlgorithm.class);
        ShardingSphereServiceLoader.register(SQLFederationDecider.class);
        ShardingSphereServiceLoader.register(RuleConfigurationChecker.class);
        ShardingSphereServiceLoader.register(DatabaseType.class);
        ShardingSphereServiceLoader.register(DataNodeBuilder.class);
        ShardingSphereServiceLoader.register(DataSourcePoolActiveDetector.class);
        ShardingSphereServiceLoader.register(DataSourcePoolMetaData.class);
        ShardingSphereServiceLoader.register(RALUpdater.class);
        ShardingSphereServiceLoader.register(RuleDefinitionUpdater.class);
        ShardingSphereServiceLoader.register(InstanceMetaDataBuilder.class);
        ShardingSphereServiceLoader.register(RuleBasedSchemaMetaDataDecorator.class);
        ShardingSphereServiceLoader.register(DataTypeLoader.class);
        ShardingSphereServiceLoader.register(DialectSchemaMetaDataLoader.class);
        ShardingSphereServiceLoader.register(DatabaseRuleBuilder.class);
        ShardingSphereServiceLoader.register(DefaultDatabaseRuleConfigurationBuilder.class);
        ShardingSphereServiceLoader.register(DefaultGlobalRuleConfigurationBuilder.class);
        ShardingSphereServiceLoader.register(GlobalRuleBuilder.class);
        ShardingSphereServiceLoader.register(YamlPersistRepositoryConfigurationSwapper.class);
        ShardingSphereServiceLoader.register(YamlRuleConfigurationSwapper.class);
        ShardingSphereServiceLoader.register(MetaDataRefresher.class);
        ShardingSphereServiceLoader.register(DatetimeService.class);
        ShardingSphereServiceLoader.register(SQLChecker.class);
        ShardingSphereServiceLoader.register(SaneQueryResultEngine.class);
        ShardingSphereServiceLoader.register(RawExecutorCallback.class);
        ShardingSphereServiceLoader.register(JDBCRowsLoader.class);
        ShardingSphereServiceLoader.register(SQLExecutionHook.class);
        ShardingSphereServiceLoader.register(ExecutionPrepareDecorator.class);
        ShardingSphereServiceLoader.register(SQLExecutionUnitBuilder.class);
        ShardingSphereServiceLoader.register(ExecuteProcessReporter.class);
        ShardingSphereServiceLoader.register(OptimizerSQLDialectBuilder.class);
        ShardingSphereServiceLoader.register(ResultProcessEngine.class);
        ShardingSphereServiceLoader.register(SQLRewriteContextDecorator.class);
        ShardingSphereServiceLoader.register(SQLRouter.class);
        ShardingSphereServiceLoader.register(ShardingSphereYamlConstruct.class);
        ShardingSphereServiceLoader.register(ShardingSphereYamlTupleProcessor.class);
        ShardingSphereServiceLoader.register(ShardingSphereYamlShortcuts.class);
        ShardingSphereServiceLoader.register(DriverState.class);
        ShardingSphereServiceLoader.register(ContextManagerBuilder.class);
        ShardingSphereServiceLoader.register(ContextManagerLifecycleListener.class);

        ShardingSphereServiceLoader.register(ReadQueryLoadBalanceAlgorithm.class);
        ShardingSphereServiceLoader.register(ShadowAlgorithm.class);
        ShardingSphereServiceLoader.register(KeyGenerateAlgorithm.class);
        ShardingSphereServiceLoader.register(ShardingAlgorithm.class);
        ShardingSphereServiceLoader.register(ShardingAuditAlgorithm.class);
        ShardingSphereServiceLoader.register(DatabaseTypedSQLParserFacade.class);
        ShardingSphereServiceLoader.register(SQLVisitorFacade.class);
        ShardingSphereServiceLoader.register(SQLTranslator.class);
        ShardingSphereServiceLoader.register(StandalonePersistRepository.class);
        ShardingSphereServiceLoader.register(JDBCRepositoryProvider.class);
        ShardingSphereServiceLoader.register(TrafficAlgorithm.class);
        ShardingSphereServiceLoader.register(TrafficLoadBalanceAlgorithm.class);
        ShardingSphereServiceLoader.register(ShardingSphereTransactionManager.class);
//        ShardingSphereServiceLoader.register(XAConnectionWrapper.class);
//        ShardingSphereServiceLoader.register(XADataSourceDefinition.class);
//        ShardingSphereServiceLoader.register(DataSourcePropertyProvider.class);
//        ShardingSphereServiceLoader.register(XATransactionManagerProvider.class);
    }
}
